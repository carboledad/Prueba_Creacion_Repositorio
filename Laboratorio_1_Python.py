{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"lIYdn1woOS1n"},"outputs":[],"source":["\"\"\"\n","Laboratorio de Programación Básica en Python para Manejo de Datos\n","-----------------------------------------------------------------------------------------\n","Este archivo contiene las preguntas que se van a realizar en el laboratorio.\n","No puede utilizar pandas, numpy o scipy. Se debe utilizar solo las funciones de python\n","básicas.\n","Utilice el archivo `data.csv` para resolver las preguntas.\n","\"\"\"\n","\n","import csv\n","\n","with open(\"/content/data.csv\", newline='') as f:\n","    datos = csv.reader(f, delimiter='\\t')\n","    columna2 = list(datos)\n","\n","def pregunta_01():\n","    \"\"\"\n","    Retorne la suma de la segunda columna.\n","    Rta/\n","    214\n","    \"\"\"\n","\n","    suma = 0\n","    for numero in columna2:\n","        suma += int(numero[1])\n","\n","    return suma\n","    \n","    print(suma)\n"]},{"cell_type":"code","source":["#import csv\n","\n","#with open(\"data.csv\", newline-'') as f:\n","#with open(\"/content/data.csv\", newline='') as f:\n","#  datos = csv.reader(f, delimiter='\\t')\n","#  columns = list(datos)\n","\n","\n","def pregunta_02():\n","    \"\"\"\n","    Retorne la cantidad de registros por cada letra de la primera columna como la lista\n","    de tuplas (letra, cantidad), ordendas alfabéticamente.\n","    Rta/\n","    [\n","        (\"A\", 8),\n","        (\"B\", 7),\n","        (\"C\", 5),\n","        (\"D\", 6),\n","        (\"E\", 14),\n","    ]\n","    \"\"\"\n","ruta = \"/content/data.csv\"\n","file1 = open(ruta, 'r')\n","lines = file1.readlines()\n","\n","data = open(\"/content/data.csv\", 'r').readlines()\n","col2 = [row[0:1] for row in data]\n","col2\n","\n","from collections import Counter\n","\n","col3 = Counter(col2)\n","col3\n","\n","#count = 0\n","#for i in col2:\n","#  if i == 'A':\n","#    count = count + 1\n","#print(count)\n","\n","  "],"metadata":{"id":"zkmHOFJ03sKY","executionInfo":{"status":"ok","timestamp":1649873118890,"user_tz":300,"elapsed":211,"user":{"displayName":"Cesar Augusto Arboleda Diosa","userId":"16379229212867515409"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"47862aea-e937-4194-87ae-d723b9b6ccbb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Counter({'A': 8, 'B': 7, 'C': 5, 'D': 6, 'E': 14})"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["\"\"\"\n","    Retorne la cantidad de registros por cada letra de la primera columna como la lista\n","    de tuplas (letra, cantidad), ordendas alfabéticamente.\n","    Rta/\n","    [\n","        (\"A\", 8),\n","        (\"B\", 7),\n","        (\"C\", 5),\n","        (\"D\", 6),\n","        (\"E\", 14),\n","    ]\n","    \"\"\"\n","#también se puede así\n","#result = []\n","#for row in data:\n","#    result.append(row[0])\n","#\n","#result\n","def pregunta_02():\n","\n","  from operator import itemgetter\n","\n","  with open(\"data.csv\", \"r\") as file:\n","      data = file.readlines()\n","\n","  data = [row[0] for row in data]\n","\n","  result = dict()\n","  for letra in data:\n","      if letra in result.keys():\n","          result[letra] = result[letra] + 1\n","      else:\n","          result[letra] = 1 \n","\n","  result\n","\n","  tuplas = [(key, valor) for key, valor in result.items()]\n","  tuplas = sorted(tuplas, key=itemgetter(0), reverse=False)\n","  return tuplas\n","\n","pregunta_02()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ewovbnb1-AFl","executionInfo":{"status":"ok","timestamp":1649876762631,"user_tz":300,"elapsed":198,"user":{"displayName":"Cesar Augusto Arboleda Diosa","userId":"16379229212867515409"}},"outputId":"dfd6d34b-0a1b-4ff5-ed92-bcbf4166ac5c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('A', 8), ('B', 7), ('C', 5), ('D', 6), ('E', 14)]"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["def pregunta_03():\n","    \"\"\"\n","    Retorne la suma de la columna 2 por cada letra de la primera columna como una lista\n","    de tuplas (letra, suma) ordendas alfabeticamente.\n","    Rta/\n","    [\n","        (\"A\", 53),\n","        (\"B\", 36),\n","        (\"C\", 27),\n","        (\"D\", 31),\n","        (\"E\", 67),\n","    ]\n","    \"\"\"\n","    f = open('data.csv', 'r').readlines()\n","    f = [i.replace('\\n', ',') for i in f]\n","    f = [i.split('\\t') for i in f]\n","\n","    for i in f:\n","        f = [[row[0], int(row[1])] for row in f]\n","    num_list = sorted(f, key=None, reverse=False)\n","\n","    num_dict = {}\n","    for t in num_list:\n","        if t[0] in num_dict:\n","            num_dict[t[0]] = num_dict[t[0]]+t[1]\n","        else:\n","            num_dict[t[0]] = t[1]\n","    num_dict = [(key, value) for key,value in num_dict.items()]\n","    return num_dict\n","pregunta_03()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FWBF89P1M4Yx","executionInfo":{"status":"ok","timestamp":1649877337726,"user_tz":300,"elapsed":222,"user":{"displayName":"Cesar Augusto Arboleda Diosa","userId":"16379229212867515409"}},"outputId":"93ee5315-d3dc-488a-d6a0-ef0936030394"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('A', 53), ('B', 36), ('C', 27), ('D', 31), ('E', 67)]"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["def pregunta_04():\n","    \"\"\"\n","    La columna 3 contiene una fecha en formato `YYYY-MM-DD`. Retorne la cantidad de\n","    registros por cada mes, tal como se muestra a continuación.\n","\n","    Rta/\n","    [\n","        (\"01\", 3),\n","        (\"02\", 4),\n","        (\"03\", 2),\n","        (\"04\", 4),\n","        (\"05\", 3),\n","        (\"06\", 3),\n","        (\"07\", 5),\n","        (\"08\", 6),\n","        (\"09\", 3),\n","        (\"10\", 2),\n","        (\"11\", 2),\n","        (\"12\", 3),\n","    ]\n","\n","    \"\"\"\n","    f = open('data.csv', 'r').readlines()\n","    f = [row.replace('\\n', '') for row in f]\n","    f = [row.split('\\t') for row in f]\n","    f = [row[2].split('-') for row in f]\n","    f = sorted([row[1] for row in f], key=None, reverse=False)\n","\n","    new_dict = {}\n","    for i in f:\n","        if str(i) in new_dict:\n","            new_dict[i] = new_dict[i] + 1\n","        else:\n","            new_dict[i] = 1\n","    new_dict = [(str(key), value) for key, value in new_dict.items()]\n","    return new_dict\n","pregunta_04()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lkt4wwHFXRij","executionInfo":{"status":"ok","timestamp":1649878041554,"user_tz":300,"elapsed":205,"user":{"displayName":"Cesar Augusto Arboleda Diosa","userId":"16379229212867515409"}},"outputId":"5f626a8b-7a7a-448a-b6d8-7d7ffc6c4b45"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('01', 3),\n"," ('02', 4),\n"," ('03', 2),\n"," ('04', 4),\n"," ('05', 3),\n"," ('06', 3),\n"," ('07', 5),\n"," ('08', 6),\n"," ('09', 3),\n"," ('10', 2),\n"," ('11', 2),\n"," ('12', 3)]"]},"metadata":{},"execution_count":60}]},{"cell_type":"code","source":["def pregunta_05():\n","    \"\"\"\n","    Retorne una lista de tuplas con el valor maximo y minimo de la columna 2 por cada\n","    letra de la columa 1.\n","\n","    Rta/\n","    [\n","        (\"A\", 9, 2),\n","        (\"B\", 9, 1),\n","        (\"C\", 9, 0),\n","        (\"D\", 8, 3),\n","        (\"E\", 9, 1),\n","    ]\n","\n","    \"\"\"\n","    from operator import itemgetter\n","\n","    with open(\"data.csv\", \"r\") as file:\n","          data = file.readlines()\n","\n","    data = [row.split('\\t') for row in data]\n","    data = [row[:2] for row in data]\n","\n","    result = {}\n","    for letra, valor in data:\n","        valor = int(valor)\n","        if letra in result.keys():\n","            result[letra].append(valor)\n","        else:\n","            result[letra] = [valor]\n","\n","    result = [(key, max(valor), min(valor)) for key, valor in result.items()]\n","\n","    result = sorted(result, key=itemgetter(0), reverse=False)\n","    return result\n","pregunta_05()    "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"psWCMJLUA3x6","executionInfo":{"status":"ok","timestamp":1649880202336,"user_tz":300,"elapsed":209,"user":{"displayName":"Cesar Augusto Arboleda Diosa","userId":"16379229212867515409"}},"outputId":"50e8dc65-f104-4c53-de65-8a657ae6d359"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('A', 9, 2), ('B', 9, 1), ('C', 9, 0), ('D', 8, 3), ('E', 9, 1)]"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["def pregunta_06():\n","    \"\"\"\n","    La columna 5 codifica un diccionario donde cada cadena de tres letras corresponde a\n","    una clave y el valor despues del caracter `:` corresponde al valor asociado a la\n","    clave. Por cada clave, obtenga el valor asociado mas pequeño y el valor asociado mas\n","    grande computados sobre todo el archivo.\n","\n","    Rta/\n","    [\n","        (\"aaa\", 1, 9),\n","        (\"bbb\", 1, 9),\n","        (\"ccc\", 1, 10),\n","        (\"ddd\", 0, 9),\n","        (\"eee\", 1, 7),\n","        (\"fff\", 0, 9),\n","        (\"ggg\", 3, 10),\n","        (\"hhh\", 0, 9),\n","        (\"iii\", 0, 9),\n","        (\"jjj\", 5, 17),\n","    ]\n","\n","    \"\"\"\n","    from operator import itemgetter\n","    \n","    f = open('data.csv', 'r').readlines()\n","    f = [row.replace('\\n', '') for row in f]\n","    f = [row.split('\\t') for row in f]\n","    f = [row[4] for row in f]\n","    f = [row.split(',') for row in f]\n","    f = [row for rowx in f for row in rowx]\n","    f = [row.replace(\":\", ',') for row in f]\n","    f = sorted([row.split(',') for row in f], key=None, reverse=False)\n","    \n","    result = {}\n","    for letra, valor in f:\n","        valor = int(valor)\n","        if letra in result.keys():\n","            result[letra].append(valor)\n","        else:\n","            result[letra] = [valor]\n","\n","    result = [(key, min(valor), max(valor)) for key, valor in result.items()]\n","    result = sorted(result, key=itemgetter(0), reverse=False)\n","    return result\n","pregunta_06()   "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"spmMq3tFbc3F","executionInfo":{"status":"ok","timestamp":1649880881631,"user_tz":300,"elapsed":181,"user":{"displayName":"Cesar Augusto Arboleda Diosa","userId":"16379229212867515409"}},"outputId":"1dc9c278-82b6-4dab-c362-52b139f2d100"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('aaa', 1, 9),\n"," ('bbb', 1, 9),\n"," ('ccc', 1, 10),\n"," ('ddd', 0, 9),\n"," ('eee', 1, 7),\n"," ('fff', 0, 9),\n"," ('ggg', 3, 10),\n"," ('hhh', 0, 9),\n"," ('iii', 0, 9),\n"," ('jjj', 5, 17)]"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","source":["def pregunta_07():\n","    \"\"\"\n","    Retorne una lista de tuplas que asocien las columnas 0 y 1. Cada tupla contiene un\n","    valor posible de la columna 2 y una lista con todas las letras asociadas (columna 1)\n","    a dicho valor de la columna 2.\n","    Rta/\n","    [\n","        (0, [\"C\"]),\n","        (1, [\"E\", \"B\", \"E\"]),\n","        (2, [\"A\", \"E\"]),\n","        (3, [\"A\", \"B\", \"D\", \"E\", \"E\", \"D\"]),\n","        (4, [\"E\", \"B\"]),\n","        (5, [\"B\", \"C\", \"D\", \"D\", \"E\", \"E\", \"E\"]),\n","        (6, [\"C\", \"E\", \"A\", \"B\"]),\n","        (7, [\"A\", \"C\", \"E\", \"D\"]),\n","        (8, [\"E\", \"D\", \"E\", \"A\", \"B\"]),\n","        (9, [\"A\", \"B\", \"E\", \"A\", \"A\", \"C\"]),\n","    ]\n","    \"\"\"\n","    f = open('data.csv', 'r').readlines()\n","    f = [row.replace('\\n', '') for row in f]\n","    f = [row.split('\\t') for row in f]\n","    f = [[row[1], row[0]] for row in f]\n","    new_dict={}\n","    for i in f:\n","        if i[0] in new_dict:\n","            new_dict[i[0]] = new_dict[i[0]]+','+i[1]\n","        else:\n","            new_dict[i[0]] = i[1]\n","\n","    tupla = sorted(tuple((int(key), value.split(',')) for key, value in new_dict.items()))\n","\n","    for i in tupla:\n","        print(i)\n","    return tupla\n","pregunta_07()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q4uZzoMzm2Rm","executionInfo":{"status":"ok","timestamp":1649883000852,"user_tz":300,"elapsed":210,"user":{"displayName":"Cesar Augusto Arboleda Diosa","userId":"16379229212867515409"}},"outputId":"3a019d39-529a-437f-e1a8-65ddba154114"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(0, ['C'])\n","(1, ['E', 'B', 'E'])\n","(2, ['A', 'E'])\n","(3, ['A', 'B', 'D', 'E', 'E', 'D'])\n","(4, ['E', 'B'])\n","(5, ['B', 'C', 'D', 'D', 'E', 'E', 'E'])\n","(6, ['C', 'E', 'A', 'B'])\n","(7, ['A', 'C', 'E', 'D'])\n","(8, ['E', 'D', 'E', 'A', 'B'])\n","(9, ['A', 'B', 'E', 'A', 'A', 'C'])\n"]},{"output_type":"execute_result","data":{"text/plain":["[(0, ['C']),\n"," (1, ['E', 'B', 'E']),\n"," (2, ['A', 'E']),\n"," (3, ['A', 'B', 'D', 'E', 'E', 'D']),\n"," (4, ['E', 'B']),\n"," (5, ['B', 'C', 'D', 'D', 'E', 'E', 'E']),\n"," (6, ['C', 'E', 'A', 'B']),\n"," (7, ['A', 'C', 'E', 'D']),\n"," (8, ['E', 'D', 'E', 'A', 'B']),\n"," (9, ['A', 'B', 'E', 'A', 'A', 'C'])]"]},"metadata":{},"execution_count":80}]},{"cell_type":"code","source":["def pregunta_08():\n","    \"\"\"\n","    Genere una lista de tuplas, donde el primer elemento de cada tupla contiene  el valor\n","    de la segunda columna; la segunda parte de la tupla es una lista con las letras\n","    (ordenadas y sin repetir letra) de la primera  columna que aparecen asociadas a dicho\n","    valor de la segunda columna.\n","\n","    Rta/\n","    [\n","        (0, [\"C\"]),\n","        (1, [\"B\", \"E\"]),\n","        (2, [\"A\", \"E\"]),\n","        (3, [\"A\", \"B\", \"D\", \"E\"]),\n","        (4, [\"B\", \"E\"]),\n","        (5, [\"B\", \"C\", \"D\", \"E\"]),\n","        (6, [\"A\", \"B\", \"C\", \"E\"]),\n","        (7, [\"A\", \"C\", \"D\", \"E\"]),\n","        (8, [\"A\", \"B\", \"D\", \"E\"]),\n","        (9, [\"A\", \"B\", \"C\", \"E\"]),\n","    ]\n","\n","    \"\"\"\n","    f = open('data.csv', 'r').readlines()\n","    f = [row.replace('\\n', '') for row in f]\n","    f = [row.split('\\t') for row in f]\n","    f = [[row[1], row[0]] for row in f]\n","    new_dict={}\n","    for i in f:\n","        if i[0] in new_dict:\n","            new_dict[i[0]] = new_dict[i[0]]+','+i[1]\n","        else:\n","            new_dict[i[0]] = i[1]\n","\n","    tupla = sorted((tuple((int(key), sorted(list(set(value.split(','))))) for key, value in new_dict.items())))\n","\n","    for i in tupla:\n","        print(i)\n","    return tupla\n","pregunta_08()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7JaldvQGtVfd","executionInfo":{"status":"ok","timestamp":1649883454083,"user_tz":300,"elapsed":193,"user":{"displayName":"Cesar Augusto Arboleda Diosa","userId":"16379229212867515409"}},"outputId":"c3c16a62-c418-42c8-cb8a-af71b46017ba"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(0, ['C'])\n","(1, ['B', 'E'])\n","(2, ['A', 'E'])\n","(3, ['A', 'B', 'D', 'E'])\n","(4, ['B', 'E'])\n","(5, ['B', 'C', 'D', 'E'])\n","(6, ['A', 'B', 'C', 'E'])\n","(7, ['A', 'C', 'D', 'E'])\n","(8, ['A', 'B', 'D', 'E'])\n","(9, ['A', 'B', 'C', 'E'])\n"]}]},{"cell_type":"code","source":["def pregunta_09():\n","    \"\"\"\n","    Retorne un diccionario que contenga la cantidad de registros en que aparece cada\n","    clave de la columna 5.\n","\n","    Rta/\n","    {\n","        \"aaa\": 13,\n","        \"bbb\": 16,\n","        \"ccc\": 23,\n","        \"ddd\": 23,\n","        \"eee\": 15,\n","        \"fff\": 20,\n","        \"ggg\": 13,\n","        \"hhh\": 16,\n","        \"iii\": 18,\n","        \"jjj\": 18,\n","    }\n","\n","    \"\"\"\n","    f = open('data.csv', 'r').readlines()\n","    f = [row.replace('\\n', '') for row in f]\n","    f = [row.split('\\t') for row in f]\n","    f = [row[4] for row in f]\n","    f = [row.split(',') for row in f]\n","    f = [row for rowx in f for row in rowx]\n","    f = [row.replace(\":\", ',') for row in f]\n","    f = sorted([row.split(',') for row in f], key=None, reverse=False)\n","\n","    new_dict={}\n","    for i in f:\n","        if i[0] in new_dict:\n","            new_dict[i[0]] = new_dict[i[0]] + 1\n","        else:\n","            new_dict[i[0]] = 1\n","    return new_dict\n","pregunta_09()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ged7ddWmuHJd","executionInfo":{"status":"ok","timestamp":1649889804949,"user_tz":300,"elapsed":203,"user":{"displayName":"Cesar Augusto Arboleda Diosa","userId":"16379229212867515409"}},"outputId":"4a28fc17-0fcd-4762-fe62-b8222c7f61c6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'aaa': 13,\n"," 'bbb': 16,\n"," 'ccc': 23,\n"," 'ddd': 23,\n"," 'eee': 15,\n"," 'fff': 20,\n"," 'ggg': 13,\n"," 'hhh': 16,\n"," 'iii': 18,\n"," 'jjj': 18}"]},"metadata":{},"execution_count":186}]},{"cell_type":"code","source":["def pregunta_10():\n","    \"\"\"\n","    Retorne una lista de tuplas contengan por cada tupla, la letra de la columna 1 y la\n","    cantidad de elementos de las columnas 4 y 5.\n","    Rta/\n","    [\n","        (\"E\", 3, 5),\n","        (\"A\", 3, 4),\n","        (\"B\", 4, 4),\n","        ...\n","        (\"C\", 4, 3),\n","        (\"E\", 2, 3),\n","        (\"E\", 3, 3),\n","    ]\n","    \"\"\"\n","    from operator import itemgetter\n","    \n","    with open(\"data.csv\",\"r\") as file:\n","        data=file.readlines()\n","    data=[row.split('\\t') for row in data]\n","    data_1=[(row[0],len(row[3].split(',')),len(row[4].split(',')))for row in data]\n","    return data_1\n","pregunta_11()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dd7ovgaDBXGW","executionInfo":{"status":"ok","timestamp":1649947270740,"user_tz":300,"elapsed":12,"user":{"displayName":"Cesar Augusto Arboleda Diosa","userId":"16379229212867515409"}},"outputId":"ba697767-0f67-4cb2-9e5b-e8bf4eddc1e0"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[('E', 3, 5),\n"," ('A', 3, 4),\n"," ('B', 4, 4),\n"," ('A', 2, 4),\n"," ('C', 4, 4),\n"," ('A', 2, 5),\n"," ('A', 3, 6),\n"," ('B', 2, 3),\n"," ('E', 4, 6),\n"," ('B', 4, 6),\n"," ('C', 4, 5),\n"," ('C', 4, 3),\n"," ('D', 4, 5),\n"," ('E', 2, 3),\n"," ('B', 2, 5),\n"," ('D', 2, 4),\n"," ('E', 3, 6),\n"," ('D', 2, 3),\n"," ('E', 4, 3),\n"," ('E', 2, 3),\n"," ('E', 2, 3),\n"," ('E', 3, 3),\n"," ('D', 3, 3),\n"," ('A', 3, 5),\n"," ('E', 2, 6),\n"," ('E', 3, 6),\n"," ('A', 3, 3),\n"," ('E', 3, 5),\n"," ('A', 2, 5),\n"," ('C', 4, 6),\n"," ('A', 2, 5),\n"," ('D', 2, 6),\n"," ('E', 2, 4),\n"," ('B', 3, 6),\n"," ('B', 3, 5),\n"," ('D', 2, 3),\n"," ('B', 2, 5),\n"," ('C', 4, 3),\n"," ('E', 2, 3),\n"," ('E', 3, 3)]"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["def pregunta_11():\n","    \"\"\"\n","    Retorne un diccionario que contengan la suma de la columna 2 para cada letra de la\n","    columna 4, ordenadas alfabeticamente.\n","    Rta/\n","    {\n","        \"a\": 122,\n","        \"b\": 49,\n","        \"c\": 91,\n","        \"d\": 73,\n","        \"e\": 86,\n","        \"f\": 134,\n","        \"g\": 35,\n","    }\n","    \"\"\"\n","    f = open('data.csv', 'r').readlines()\n","    f = [row.replace('\\n','') for row in f]\n","    f = [row.split('\\t') for row in f ]\n","    f = [[row[3].split(','), row[1]] for row in f]\n","    f = [[row[0], int(row[1])] for row in f]\n","\n","    lista=[]\n","    for i, j in f:\n","        for x in i:\n","            lista.append([x, j])\n","    new_dict={}\n","    for i in lista:\n","        if i[0] in new_dict:\n","            new_dict[i[0]] = new_dict[i[0]] + i[1]\n","        else:\n","            new_dict[i[0]] = i[1]\n","    return new_dict\n","pregunta_11()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6ly3Q6huFP7e","executionInfo":{"status":"ok","timestamp":1649948051740,"user_tz":300,"elapsed":8,"user":{"displayName":"Cesar Augusto Arboleda Diosa","userId":"16379229212867515409"}},"outputId":"2e25575b-b212-45aa-955d-a6725cdc4c61"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'a': 122, 'b': 49, 'c': 91, 'd': 73, 'e': 86, 'f': 134, 'g': 35}"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["def pregunta_12():\n","    \"\"\"\n","    Genere un diccionario que contengan como clave la columna 1 y como valor la suma de\n","    los valores de la columna 5 sobre todo el archivo.\n","\n","    Rta/\n","    {\n","        'A': 177,\n","        'B': 187,\n","        'C': 114,\n","        'D': 136,\n","        'E': 324\n","    }\n","\n","    \"\"\"\n","    f = open('data.csv', 'r').readlines()\n","    f = [row.replace('\\n','') for row in f]\n","    f = [row.split('\\t') for row in f ]\n","    f = [[row[0], row[4].split(',')] for row in f]\n","\n","    lista=[]\n","    for i, j in f:\n","        for x in i:\n","            lista.append([x, j])\n","    new_dict={}\n","    for i in lista:\n","        if i[0] in new_dict:\n","            new_dict[i[0]] = new_dict[i[0]] + sum([int(j.split(':')[1]) for j in i[1]])\n","        else:\n","            new_dict[i[0]] = sum([int(j.split(':')[1]) for j in i[1]])\n","    return new_dict\n","pregunta_12()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2RGXSpskjp83","executionInfo":{"status":"ok","timestamp":1649955923193,"user_tz":300,"elapsed":209,"user":{"displayName":"Cesar Augusto Arboleda Diosa","userId":"16379229212867515409"}},"outputId":"e9d81fed-237e-40a5-e8f3-fa8615fe42f7"},"execution_count":96,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'A': 177, 'B': 187, 'C': 114, 'D': 136, 'E': 324}"]},"metadata":{},"execution_count":96}]},{"cell_type":"code","source":["#seccion 03 cuarta viñeta\n","with open(\"data.csv\", \"r\") as file:\n","      data = file.readlines()\n","\n","data = [row.split('\\t') for row in data]\n","data = [[row[0]] + [int(row[1])] + row[2:] for row in data]\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mYFje5zwPChm","executionInfo":{"status":"ok","timestamp":1649879170496,"user_tz":300,"elapsed":243,"user":{"displayName":"Cesar Augusto Arboleda Diosa","userId":"16379229212867515409"}},"outputId":"3e161422-4c0b-49fc-edd7-dfd94dc5d03b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[['E', 1, '1999-02-28', 'b,g,f', 'jjj:12,bbb:3,ddd:9,ggg:8,hhh:2\\n'],\n"," ['A', 2, '1999-10-28', 'a,f,c', 'ccc:2,ddd:0,aaa:3,hhh:9\\n'],\n"," ['B', 5, '1998-05-02', 'f,e,a,c', 'ddd:2,ggg:5,ccc:6,jjj:12\\n'],\n"," ['A', 3, '1999-08-28', 'a,b', 'hhh:9,iii:5,eee:7,bbb:1\\n'],\n"," ['C', 6, '1999-12-01', 'f,g,d,a', 'iii:6,ddd:5,eee:4,jjj:12\\n'],\n"," ['A', 7, '1998-07-28', 'c,d', 'bbb:2,hhh:0,ccc:4,fff:1,aaa:7\\n'],\n"," ['A', 9, '1997-02-28', 'g,d,a', 'aaa:5,fff:8,ddd:2,iii:0,jjj:7,ccc:1\\n'],\n"," ['B', 1, '1999-05-10', 'b,a', 'fff:3,hhh:1,ddd:2\\n'],\n"," ['E', 2, '1997-04-12', 'd,e,a,f', 'eee:4,ccc:5,iii:9,fff:7,ggg:6,bbb:2\\n'],\n"," ['B', 3, '1999-11-23', 'd,b,g,f', 'bbb:7,jjj:9,fff:5,iii:4,ggg:3,eee:3\\n'],\n"," ['C', 7, '1998-01-17', 'd,c,f,b', 'hhh:6,eee:4,iii:0,fff:2,jjj:12\\n'],\n"," ['C', 5, '1998-12-28', 'd,e,a,c', 'bbb:7,iii:6,ggg:9\\n'],\n"," ['D', 3, '1999-10-15', 'g,e,f,b', 'bbb:9,aaa:3,ccc:6,fff:4,eee:2\\n'],\n"," ['E', 8, '1998-11-01', 'c,f', 'aaa:8,ddd:5,jjj:12\\n'],\n"," ['B', 9, '1999-08-12', 'd,b', 'ccc:7,jjj:6,fff:7,ddd:3,aaa:2\\n'],\n"," ['D', 8, '1997-12-01', 'f,e', 'ccc:8,eee:6,bbb:9,ddd:3\\n'],\n"," ['E', 3, '1997-07-28', 'e,b,f', 'bbb:6,iii:3,hhh:5,fff:4,ggg:9,ddd:2\\n'],\n"," ['D', 5, '1998-08-12', 'g,a', 'hhh:4,jjj:5,ccc:9\\n'],\n"," ['E', 8, '1999-08-24', 'e,c,f,a', 'ccc:1,iii:6,fff:9\\n'],\n"," ['E', 9, '1998-01-23', 'e,a', 'bbb:9,aaa:3,fff:1\\n'],\n"," ['E', 7, '1999-06-22', 'e,f', 'ddd:9,iii:2,aaa:4\\n'],\n"," ['E', 3, '1999-04-24', 'c,b,g', 'ccc:5,fff:8,iii:7\\n'],\n"," ['D', 5, '1999-06-25', 'c,f,a', 'eee:3,jjj:17,ddd:7\\n'],\n"," ['A', 9, '1999-08-25', 'f,a,d', 'jjj:12,ggg:7,ccc:7,ddd:9,bbb:3\\n'],\n"," ['E', 4, '1997-07-26', 'c,d', 'jjj:6,ccc:4,aaa:1,hhh:9,iii:7,ggg:8\\n'],\n"," ['E', 6, '1997-09-24', 'e,d,c', 'fff:3,eee:6,iii:4,bbb:7,ddd:4,ccc:1\\n'],\n"," ['A', 8, '1997-09-28', 'a,e,f', 'fff:0,ddd:5,ccc:4\\n'],\n"," ['E', 5, '1999-06-22', 'c,a,g', 'ggg:6,hhh:3,ddd:9,ccc:10,jjj:7\\n'],\n"," ['A', 6, '1999-07-29', 'f,e', 'hhh:6,jjj:13,eee:5,iii:7,ccc:3\\n'],\n"," ['C', 0, '1999-08-22', 'f,c,a,g', 'eee:1,fff:4,aaa:2,ccc:7,ggg:10,ddd:6\\n'],\n"," ['A', 9, '1998-04-26', 'b,f', 'ccc:6,aaa:9,eee:5,ddd:0,bbb:3\\n'],\n"," ['D', 3, '1998-02-24', 'b,f', 'bbb:7,hhh:1,aaa:6,iii:4,fff:9,ddd:5\\n'],\n"," ['E', 5, '1999-03-24', 'a,c', 'fff:3,ccc:1,ggg:3,eee:5\\n'],\n"," ['B', 4, '1998-03-23', 'b,f,c', 'iii:7,ggg:3,ddd:0,jjj:8,hhh:5,ccc:1\\n'],\n"," ['B', 6, '1999-04-21', 'f,a,e', 'hhh:6,ccc:3,jjj:9,bbb:8,ddd:7\\n'],\n"," ['D', 7, '1999-02-29', 'a,f', 'aaa:1,fff:5,ddd:3\\n'],\n"," ['B', 8, '1997-05-21', 'c,a', 'ddd:5,jjj:17,iii:7,ccc:10,bbb:4\\n'],\n"," ['C', 9, '1997-07-22', 'c,a,e,f', 'eee:3,fff:2,hhh:6\\n'],\n"," ['E', 1, '1999-09-28', 'e,d', 'fff:9,iii:2,eee:5\\n'],\n"," ['E', 5, '1998-01-26', 'f,a,d', 'hhh:8,ggg:3,jjj:5\\n']]"]},"metadata":{},"execution_count":63}]}],"metadata":{"colab":{"name":"Laboratorio_1","provenance":[{"file_id":"/v2/external/notebooks/empty.ipynb","timestamp":1647730843714}],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","name":"python3"}},"nbformat":4,"nbformat_minor":0}